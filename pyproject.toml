[tool.poetry]
name = "demand_forecasting_tft"
readme = "README.md" 
authors = ['alexstedev']
version = "0.0.0" 
description = "Demand forecasting with TFTs"

[tool.poetry.dependencies]
python = ">=3.9,<3.11"

torch = "^2.0.0"
lightning = "2.0.1"
optuna = "^3.1.0"
scipy = "^1.8"
pandas = ">=1.3.0,<=3.0.0"
scikit-learn = "^1.2"
matplotlib = "*"
statsmodels = "*"
pytorch-forecasting = "*"

pytest-github-actions-annotate-failures = {version = "*", optional = true}
networkx = {version = "^3.0.0", optional = true}
cpflows = {version="^0.1.2", optional = true}
fastapi = ">=0.80"
pytorch-optimizer = "^2.5.1"
numpy = "^1.25.2"
uvicorn = "^0.23.2"

[tool.poetry.group.dev.dependencies]
pydocstyle = "^6.1.1"
# checks and make tools
pre-commit = "^3.2.0"

invoke = "*"
flake8 = "*"
mypy = "*"
pylint = "*"
isort = "*"

# pytest
pytest = "*"
pytest-xdist = "*"
pytest-cov = "*"
pytest-sugar = "*"
coverage = "*"
pyarrow = "*"

# jupyter notebook
ipykernel = "*"
black = { version = "*", allow-prereleases = true, extras = ["jupyter"] }

# documentatation
sphinx = "*"
pydata-sphinx-theme = "*"
nbsphinx = "*"
# pandoc = "*"  # todo: bring back later when install works again
recommonmark = "*"
ipywidgets = "^8.0.1"
pytest-dotenv = "^0.5.2"
tensorboard = "^2.12.1"
pandoc = "^2.3"


[tool.poetry.extras]  # extras
github-actions = ["pytest-github-actions-annotate-failures"]
graph = ["networkx"]
mqf2 = ["cpflows"]

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
dirty = false
style = "semver"  # semantic versioning

[build-system]  # make the package pip installable
requires = ["poetry-core>=1.0.7", "poetry-dynamic-versioning>=0.13.1"]
build-backend = "poetry_dynamic_versioning.backend"
